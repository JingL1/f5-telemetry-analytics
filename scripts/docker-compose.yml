version: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
    container_name: ELASTICSEARCH
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    volumes:
     - ${HOMEDIR}/data/elasticsearch:/usr/share/elasticsearch/data

  fluentd:
    build: ${HOMEDIR}/docker/fluentd
    image: zongzw/fluentd:latest
    container_name: FLUENTD
    ports:
      - 24224:24224
      - 24224:24224/udp
      - 20001:20001/udp
      - 8081:8081
      - 8085:8085
    volumes:
      - ${HOMEDIR}/conf.d/fluentd.conf:/etc/td-agent/td-agent.conf
    depends_on:
      - elasticsearch
      - kibana

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.1
    container_name: KIBANA
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - ${HOMEDIR}/conf.d/kibana.yml:/usr/share/kibana/config/kibana.yml
      - ${HOMEDIR}/data/kibana:/usr/share/kibana/data

  sandbox:
    build: ${HOMEDIR}/docker/sandbox
    image: zongzw/sandbox:latest
    container_name: SANDBOX
    ports:
      - 8000:80
    depends_on:
      # - nginx
      - as3
    env_file:
      - ${HOMEDIR}/conf.d/setup.rc
    volumes:
      - ${HOMEDIR}/scripts:/root/scripts
      - ${HOMEDIR}/conf.d/setup.rc:/root/setup.rc # temp
      - ${HOMEDIR}/conf.d/kibana-exports:/root/kibana-exports

  # nginx:
  #   image: nginx:latest
  #   container_name: WEBSERVER
  #   ports:
  #     - 8080:80
  #   volumes:
  #     - ${HOMEDIR}/conf.d/nginx.conf:/etc/nginx/nginx.conf

  as3:
    image: f5devcentral/f5-as3-container:latest
    container_name: AS3
    ports: 
      - 8443:443
