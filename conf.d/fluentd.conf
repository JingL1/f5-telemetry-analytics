<system>
  workers 8
  root_dir /var/log/td-agent/buffer
</system>

@include fluentd/*.conf

# <source>
#   @type udp
#   @log_level debug
#   tag dns_input
#   # format json
#   format /[^ ]* (?<timestamp>.*) (?<bigip-info>.* .* .* .* .*) [^ ]*: (?<client-ip>.*) [^ ]*: (?<client-port>.*) [^ ]*: (?<request-id>(.* \(.*\))|(.*)) [^ ]*: (?<query-name>.*) [^ ]*: (?<query-type>.*) [^ ]*: (?<packet-len>.*) [^ ]*: (?<response-status>.*) [^ ]*: (?<latency>.*$)/
#   port 20002
#   bind 0.0.0.0
# </source>

# <filter dns_input>
#   @type geoip
#   @log_level debug
#   geoip_lookup_keys client-ip
#   backend_library geoip2_c

#   <record>
#     city            ${city.names.en["client-ip"]}
#     geo             ${location.latitude["client-ip"]},${location.longitude["client-ip"]}
#     country         ${country.iso_code["client-ip"]}
#     country_name    ${country.names.en["client-ip"]}
#     postal_code     ${postal.code["client-ip"]}
#     region_code     ${subdivisions.0.iso_code["client-ip"]}
#     region_name     ${subdivisions.0.names.en["client-ip"]}
#   </record>
# </filter>

# # <match dns_input>
# #    @type stdout
# # </match>

# <match dns_input>
#   @type elasticsearch
#   @log_level debug
#   host 10.145.64.127
#   port 9200
#   flush_interval 5s
#   index_name dns-fluentd
# </match>

# <source>
#   @type udp
#   @log_level debug
#   tag http_input
# #   format json
# #   format /[^ ]* (?<timestamp>.*) (?<bigip-info>.* .* .* .* .*) [^ ]*: (?<client_ip>.*) [^ ]*: (?<host>.*) [^ ]*: (?<user-agent>(.* \(.*\))|(.*)) [^ ]*: (?<cookie>.*) [^ ]*: (?<method>.*) [^ ]*: (?<uri>.*) [^ ]*: (?<username>.*) [^ ]*: (?<content-type>.*) [^ ]*: (?<server-ip>.*) [^ ]*: (?<latency>.*) [^ ]*: (?<status>.*$)/
#   <parse>
#     @type csv
#     keys @timestamp,logging_time,client_ip,host,user_agent,cookie,method,uri,username,content_type,server_ip,latency,resp_status
#     # keys client_ip
#     time_key @timestamp
#   </parse>
# #   <parse>
# #     @type json
# #   </parse>
#   # format /(?<timestamp>.*): (?<message>.*)$/
#   port 20001
#   bind 0.0.0.0
# </source>

# <source>
#   @type udp
#   @log_level debug
#   tag http_input
#   format /(?<all>.*)/
#   port 20001
#   bind 0.0.0.0
# </source>

# <filter http_input>
#   @type geoip
#   @log_level debug
#   geoip_lookup_keys client_ip
#   backend_library geoip2_c

#   <record>
#     city            ${city.names.en["client_ip"]}
#     geo             ${location.latitude["client_ip"]},${location.longitude["client_ip"]}
#     country         ${country.iso_code["client_ip"]}
#     country_name    ${country.names.en["client_ip"]}
#     postal_code     ${postal.code["client_ip"]}
#     region_code     ${subdivisions.0.iso_code["client_ip"]}
#     region_name     ${subdivisions.0.names.en["client_ip"]}
#   </record>
# </filter>

# <match http_input>
#   @type elasticsearch
#   @log_level debug
#   host elasticsearch
#   port 9200
#   flush_interval 1s
#   index_name ltm-fluentd
# </match>

# <source>
#     @type http
#     port 8081
# </source>

# <filter myapp.access>
#     @type record_transformer
#     <record>
#         hostname "#{Socket.gethostname}"
#     </record>
# </filter>

# <filter geoip.access>
#     @type geoip

#     geoip_lookup_keys host

#     backend_library geoip2_c

#     <record>
#         city            ${city.names.en["host"]}
#         latitude        ${location.latitude["host"]}
#         longtitude       ${location.longitude["host"]}
#         country         ${country.iso_code["host"]}
#         country_name    ${country.names.en["host"]}
#     </record>
# </filter>

# <match myapp.access>
#     @type copy
#     <store>
#         @type stdout
#     </store>
#     <store>
#         @type elasticsearch
#         host elasticsearch
#         port 9200
#         logstash_format true
#         logstash_prefix fluentd
#         include_tag_key true
#         type_name access_log
#         tag_key @log_name
#         flush_interval 1s
#     </store>
# </match>

# <match geoip.access>
#     @type copy
#     <store>
#         @type elasticsearch
#         host elasticsearch
#         port 9200
#         logstash_format true
#         logstash_prefix fluentd
#         include_tag_key true
#         type_name access_log
#         tag_key @log_name
#         flush_interval 1s
#     </store>
# </match>


# <source>
#   @type udp
#   @log_level debug
#   tag dns_input
#   # format json
#   format /[^ ]* (?<timestamp>.*) (?<bigip-info>.* .* .* .* .*) [^ ]*: (?<client_ip>.*) [^ ]*: (?<client-port>.*) [^ ]*: (?<request-id>(.* \(.*\))|(.*)) [^ ]*: (?<query-name>.*) [^ ]*: (?<query-type>.*) [^ ]*: (?<packet-len>.*) [^ ]*: (?<response-status>.*) [^ ]*: (?<latency>.*$)/
#   port 20002
#   bind 0.0.0.0
# </source>

# <filter dns_input>
#   @type geoip
#   @log_level debug
#   geoip_lookup_keys client_ip
#   backend_library geoip2_c

#   <record>
#     city            ${city.names.en["client_ip"]}
#     geo             ${location.latitude["client_ip"]},${location.longitude["client_ip"]}
#     country         ${country.iso_code["client_ip"]}
#     country_name    ${country.names.en["client_ip"]}
#     postal_code     ${postal.code["client_ip"]}
#     region_code     ${subdivisions.0.iso_code["client_ip"]}
#     region_name     ${subdivisions.0.names.en["client_ip"]}
#   </record>
# </filter>

# # <match dns_input>
# #    @type stdout
# # </match>

# <match dns_input>
#   @type elasticsearch
#   @log_level debug
#   host elasticsearch
#   port 9200
#   flush_interval 5s
#   index_name dns-fluentd
# </match>


# ==========================================
# <source>
#     @type http
#     port 8085
#     tag input_from_bigip
# </source>

# <match input_from_bigip>
#     @type copy
#     <store>
#         @type stdout
#     </store>
#     <store>
#         @type elasticsearch
#         host elasticsearch
#         port 9200
#         logstash_format true
#         logstash_prefix fluentd
#         include_tag_key true
#         type_name access_log
#         tag_key @log_name
#         flush_interval 1s
#     </store>
# </match>